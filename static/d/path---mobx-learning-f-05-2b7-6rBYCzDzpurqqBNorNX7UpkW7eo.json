{"pageContext":{"jsonName":"mobx-learning-f05","internalComponentName":"ComponentMobxLearning","path":"/mobx-learning","component":"/Users/taylor/Documents/Projects/taylorlistens/src/templates/blog-post.js","componentChunkName":"component---src-templates-blog-post-js","context":{"next":{"html":"<h1>Build and deploy a quick Rails app to Heroku</h1>\n<p>Building and deploying a Rails app to Heroku is actually pretty fast.</p>\n<p>Start by running:</p>\n<pre><code class=\"language-ruby\">rails new basic_app\n</code></pre>\n<p>After starting the server with <code>rails server -b 0.0.0.0 -p 3000</code>, you should see the default Rails \"Welcome\" screen.</p>\n<p>Now generate a controller:</p>\n<pre><code class=\"language-ruby\">rails generate controller home\n</code></pre>\n<p>And inside of <code>config/routes.rb</code>:</p>\n<pre><code class=\"language-ruby\">Rails.application.routes.draw do\n  root 'home#index'\nend\n</code></pre>\n<p>Create a new file <code>app/views/home/index.html.erb</code>, and add a headline:</p>\n<pre><code class=\"language-ruby\">&#x3C;h1>Here's a headline.&#x3C;/h1>\n</code></pre>\n<p>We can set some styles in <code>app/assets/stylesheets/home.scss</code></p>\n<pre><code class=\"language-css\">h1 {\n  color: rebeccapurple;\n}\n</code></pre>\n<p>Restart the Rails server, and you should see the headline.</p>\n<p>Push it to github!</p>\n<h1>Deploying to Heroku</h1>\n<p>Create a new Heroku app:</p>\n<pre><code class=\"language-ruby\">heroku create tayiorbeii-basic-app\n</code></pre>\n<p>Then do:</p>\n<pre><code class=\"language-ruby\">git push heroku master\n</code></pre>\n<p><em>I actually got an error here.</em></p>\n<p>Heroku complained about the <code>sqlite3</code> gem not being supported by Heroku, so I'm going to remove it from the <code>Gemfile</code> and try to push again.</p>\n<p>So I removed it, pushed again, but it complained that I have to run <code>bundle install</code> to clean up the lockfile.</p>\n<p>Probably should have just used <code>rails new basic_app --database=postgresql</code> when creating the app.</p>\n<p>Update the Gemfile to use <code>pg</code>:</p>\n<pre><code class=\"language-ruby\"># Use postgresql as the database for Active Record\ngem 'pg'\n</code></pre>\n<p>Run <code>bundle install</code> then push to git &#x26; Heroku, and still complaining.</p>\n<p>Ends up there's more references to <code>sqlite3</code> in the <code>config/database.yml</code> file.</p>\n<p>Push it up, and all is well with the universe!</p>","id":"4dc86a71-df12-5c81-bf2d-4b1753a4c64c","frontmatter":{"date":"2017-12-06T23:12:06.113Z","path":"/basic-rails-app","title":"Build and deploy a quick Rails app to Heroku","excerpt":"","tags":["ruby","rails","heroku","code"]}},"prev":{"html":"<p>I made a fork of <a href=\"https://github.com/tayiorbeii/tachyons-as-props\"><code>tachyons-as-props</code></a> in my quest to replace tachyons + sass with glamorous.</p>\n<p>A nice way to work on a <code>node_module</code> locally without having to publish it is to use <code>yarn link</code> (or <code>npm link</code> if you're so inclined).</p>\n<p>The steps are pretty easy:</p>\n<ol>\n<li>\n<p>Go to the local folder of the module you are currently working on:</p>\n<ul>\n<li><code>cd module_in_progress</code></li>\n</ul>\n</li>\n<li>\n<p>Type <code>yarn link</code></p>\n<ul>\n<li>You should see a \"success\" message</li>\n</ul>\n</li>\n<li>\n<p>Go to your consuming project's folder</p>\n<ul>\n<li><code>cd my_project</code></li>\n</ul>\n</li>\n<li>Type <code>yarn link module_in_progress</code></li>\n</ol>\n<p>Now if you <code>ls node_modules</code> in your consuming project's folder, you should see that <code>module_in_progress</code> has been symlinked to its folder (as opposed to being installed as normal).</p>","id":"00a7db61-0e3a-594c-a339-07d8bbc0477d","frontmatter":{"date":"2017-09-13T18:33:28.522Z","path":"/yarn-link","title":"`yarn link` for npm Module Development","excerpt":"","tags":["javascript","npm"]}}},"updatedAt":1530052696897,"pluginCreator___NODE":"Plugin default-site-plugin","pluginCreatorId":"Plugin default-site-plugin","componentPath":"/Users/taylor/Documents/Projects/taylorlistens/src/templates/blog-post.js","next":{"html":"<h1>Build and deploy a quick Rails app to Heroku</h1>\n<p>Building and deploying a Rails app to Heroku is actually pretty fast.</p>\n<p>Start by running:</p>\n<pre><code class=\"language-ruby\">rails new basic_app\n</code></pre>\n<p>After starting the server with <code>rails server -b 0.0.0.0 -p 3000</code>, you should see the default Rails \"Welcome\" screen.</p>\n<p>Now generate a controller:</p>\n<pre><code class=\"language-ruby\">rails generate controller home\n</code></pre>\n<p>And inside of <code>config/routes.rb</code>:</p>\n<pre><code class=\"language-ruby\">Rails.application.routes.draw do\n  root 'home#index'\nend\n</code></pre>\n<p>Create a new file <code>app/views/home/index.html.erb</code>, and add a headline:</p>\n<pre><code class=\"language-ruby\">&#x3C;h1>Here's a headline.&#x3C;/h1>\n</code></pre>\n<p>We can set some styles in <code>app/assets/stylesheets/home.scss</code></p>\n<pre><code class=\"language-css\">h1 {\n  color: rebeccapurple;\n}\n</code></pre>\n<p>Restart the Rails server, and you should see the headline.</p>\n<p>Push it to github!</p>\n<h1>Deploying to Heroku</h1>\n<p>Create a new Heroku app:</p>\n<pre><code class=\"language-ruby\">heroku create tayiorbeii-basic-app\n</code></pre>\n<p>Then do:</p>\n<pre><code class=\"language-ruby\">git push heroku master\n</code></pre>\n<p><em>I actually got an error here.</em></p>\n<p>Heroku complained about the <code>sqlite3</code> gem not being supported by Heroku, so I'm going to remove it from the <code>Gemfile</code> and try to push again.</p>\n<p>So I removed it, pushed again, but it complained that I have to run <code>bundle install</code> to clean up the lockfile.</p>\n<p>Probably should have just used <code>rails new basic_app --database=postgresql</code> when creating the app.</p>\n<p>Update the Gemfile to use <code>pg</code>:</p>\n<pre><code class=\"language-ruby\"># Use postgresql as the database for Active Record\ngem 'pg'\n</code></pre>\n<p>Run <code>bundle install</code> then push to git &#x26; Heroku, and still complaining.</p>\n<p>Ends up there's more references to <code>sqlite3</code> in the <code>config/database.yml</code> file.</p>\n<p>Push it up, and all is well with the universe!</p>","id":"4dc86a71-df12-5c81-bf2d-4b1753a4c64c","frontmatter":{"date":"2017-12-06T23:12:06.113Z","path":"/basic-rails-app","title":"Build and deploy a quick Rails app to Heroku","excerpt":"","tags":["ruby","rails","heroku","code"]}},"prev":{"html":"<p>I made a fork of <a href=\"https://github.com/tayiorbeii/tachyons-as-props\"><code>tachyons-as-props</code></a> in my quest to replace tachyons + sass with glamorous.</p>\n<p>A nice way to work on a <code>node_module</code> locally without having to publish it is to use <code>yarn link</code> (or <code>npm link</code> if you're so inclined).</p>\n<p>The steps are pretty easy:</p>\n<ol>\n<li>\n<p>Go to the local folder of the module you are currently working on:</p>\n<ul>\n<li><code>cd module_in_progress</code></li>\n</ul>\n</li>\n<li>\n<p>Type <code>yarn link</code></p>\n<ul>\n<li>You should see a \"success\" message</li>\n</ul>\n</li>\n<li>\n<p>Go to your consuming project's folder</p>\n<ul>\n<li><code>cd my_project</code></li>\n</ul>\n</li>\n<li>Type <code>yarn link module_in_progress</code></li>\n</ol>\n<p>Now if you <code>ls node_modules</code> in your consuming project's folder, you should see that <code>module_in_progress</code> has been symlinked to its folder (as opposed to being installed as normal).</p>","id":"00a7db61-0e3a-594c-a339-07d8bbc0477d","frontmatter":{"date":"2017-09-13T18:33:28.522Z","path":"/yarn-link","title":"`yarn link` for npm Module Development","excerpt":"","tags":["javascript","npm"]}}}}