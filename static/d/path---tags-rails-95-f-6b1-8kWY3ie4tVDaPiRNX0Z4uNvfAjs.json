{"pageContext":{"jsonName":"tags-rails-95f","internalComponentName":"ComponentTagsRails","path":"/tags/rails","component":"/Users/taylor/Documents/Projects/taylorlistens/src/templates/tag-page.js","componentChunkName":"component---src-templates-tag-page-js","context":{"posts":[{"html":"<h1>Learning some ActiveRecord</h1>\n<p>My goal here is to create a database seeded by some csv files, so I can ask questions of my data.</p>\n<p><strong>NOTE:</strong> This is a play-by-play of what I'm doing as I do it, and is NOT in step-by-step, \"follow along at home\" format. I make mistakes here, and then work on fixing them!</p>\n<h3>Scaffolding an app</h3>\n<p>A scaffold is a full set of model, database migratioin, controller, view, and test suite.</p>\n<pre><code class=\"language-ruby\">rails new basketball_model --database=postgresql\n\nrails generate scaffold Prediction home:string away:string ...\n\nrake db:create\n</code></pre>\n<hr>\n<h3>Associating Tables</h3>\n<p>Following through <a href=\"http://guides.rubyonrails.org/association_basics.html\">Rails Guides' Associations info</a>, My goal is to build something like this structure:</p>\n<ul>\n<li>\n<p><code>Team</code></p>\n<ul>\n<li><code>team_id</code></li>\n<li><code>team_name</code></li>\n<li><code>team_abbv</code></li>\n<li><code>team_city</code></li>\n<li><code>has_many</code> of each odds through each <code>Match</code></li>\n<li><code>has_many</code> <code>Match</code>es</li>\n</ul>\n</li>\n<li>\n<p><code>Match</code></p>\n<ul>\n<li><code>has_many</code> <code>Team</code>s</li>\n<li><code>has_one</code> <code>MoneyLineOdd</code> etc.</li>\n<li><code>has_many</code> <code>Prediction</code>s</li>\n<li><code>match_id</code></li>\n<li><code>date</code> datetime</li>\n<li><code>home_team_id</code></li>\n<li><code>away_team_id</code></li>\n<li><code>home_score</code></li>\n<li><code>away_score</code></li>\n<li><code>home_fave</code> boolean</li>\n<li><code>away_fave</code> boolean</li>\n<li><code>home_dog</code> boolean</li>\n<li><code>away_dog</code> boolean</li>\n</ul>\n</li>\n<li>\n<p><code>MoneyLineOdd</code></p>\n<ul>\n<li><code>belongs_to</code> <code>Match</code></li>\n<li><code>moneyline_id</code></li>\n<li><code>home_closing_odd</code></li>\n<li><code>away_closing_odd</code></li>\n<li><code>home_opening_odd</code></li>\n<li><code>away_opening_odd</code></li>\n</ul>\n</li>\n<li>\n<p><code>SpreadOdd</code></p>\n<ul>\n<li><code>belongs_to</code> <code>Match</code></li>\n<li><code>spread_id</code></li>\n<li><code>home_closing_odd</code></li>\n<li><code>away_closing_odd</code></li>\n<li><code>home_opening_odd</code></li>\n<li><code>away_opening_odd</code></li>\n<li><code>home_closing_value</code></li>\n<li><code>away_closing_value</code></li>\n<li><code>home_opening_value</code></li>\n<li><code>away_opening_value</code></li>\n</ul>\n</li>\n<li>\n<p><code>TotalOdd</code></p>\n<ul>\n<li><code>belongs_to</code> <code>Match</code></li>\n<li><code>total_id</code></li>\n<li><code>over_closing_odd</code></li>\n<li><code>under_closing_odd</code></li>\n<li><code>over_opening_odd</code></li>\n<li><code>under_opening_odd</code></li>\n<li><code>over_closing_value</code></li>\n<li><code>under_closing_value</code></li>\n<li><code>over_opening_value</code></li>\n<li><code>under_opening_value</code></li>\n</ul>\n</li>\n<li>\n<p><code>Prediction</code></p>\n<ul>\n<li><code>belongs_to</code> <code>Match</code></li>\n<li><code>prediction_id</code></li>\n<li><code>pred_type</code></li>\n<li><code>home_pred</code></li>\n<li><code>away_pred</code></li>\n<li><code>over_pred</code></li>\n<li><code>under_pred</code></li>\n</ul>\n</li>\n</ul>\n<p>With all of that schema stuff written out (which actually took quite a while to reason about...) I am going to try to generate scaffolding using info from <a href=\"https://stackoverflow.com/questions/39810917/generate-scaffold-which-references-a-model-who-refers-another-model\">this StackOverflow question</a></p>\n<pre><code>rails g scaffold team id:integer name:string abbv:string city:string --no-stylesheets\n\nrails g scaffold match date:datetime home_team_id:references{polymorphic} away_team_id:references{polymorphic} home_fave:boolean away_fave:boolean home_dog:boolean away_dog:boolean --no-stylesheets\n\nrails g scaffold SpreadOdd home_opening_odd:float home_closing_odd:float away_opening_odd:float away_closing_odd:float home_opening_value:float away_opening_value:float home_closing_value:float away_closing_value:float --no-stylesheets\n\nrails g scaffold TotalOdd over_opening_odd:float over_closing_odd:float under_opening_odd:float under_closing_odd:float over_opening_value:float under_opening_value:float over_closing_value:float under_closing_value:float --no-stylesheets\n\nrails g scaffold Prediction pred_type:string home_pred:float away_pred:float over_pred:float under_pred:float --no-stylesheets\n</code></pre>\n<p>I forgot to add <code>home_id</code> and <code>away_id</code> to the Match table, so I had to rollback the database migration:</p>\n<pre><code class=\"language-ruby\">rake db:rollback STEP=1\n</code></pre>\n<p>Then I generated a new migration:</p>\n<pre><code class=\"language-ruby\">rails generate migration add_homeId_to_match\n</code></pre>\n<p>Updated the migration to add the foreign keys:</p>\n<pre><code class=\"language-ruby\">class AddHomeIdToMatch &#x3C; ActiveRecord::Migration[5.0]\n  def change\n    create_table :matches do |t|\n      t.integer :home_id, foreign_key: true\n      t.integer :away_id, foreign_key: true\n    end\n  end\nend\n</code></pre>\n<p>and ran <code>rake db:migrate</code></p>\n<p><em>Big up to Rose and Nick for helping me figure out this part.</em></p>\n<p>Now to run a similar process for <code>Team</code> to add <code>matches</code> and <code>odds</code>, except doing it on one line like I could have the first time:</p>\n<pre><code class=\"language-ruby\">rails generate migration addMatchesToTeams home_matches:references away_matches:references\n</code></pre>\n<pre><code class=\"language-ruby\">class AddMatchesToTeams &#x3C; ActiveRecord::Migration[5.0]\n  def change\n    add_reference :teams, :home_matches, foreign_key: true\n    add_reference :teams, :away_matches, foreign_key: true\n  end\nend\n</code></pre>\n<p>Then I create a new <code>MatchTeams</code> table in order to link the <code>Team</code>s and <code>Match</code>es together.</p>\n<hr>\n<p>Now I'm going to try following the instructions for the <a href=\"https://github.com/michaelnera/active_record_importer\">ActiveRecordImporter gem</a>. </p>\n<p>I added <code>acts_as_importable</code> to <code>models/prediction.rb</code>.</p>\n<p>Then I found the syntax to find every CSV file in the directory I was working with (remembering that each file's header columns are part of the model I scaffolded):</p>\n<pre><code class=\"language-ruby\">Dir.glob('path/to/files/*.rb') do |csv_file|\n  Prediction.import!(file: File.open(csv_file))\nend\n</code></pre>\n<p>Judging from the amount of text that flew by, I think it worked!</p>\n<p>Visiting <code>http://localhost:3000/predictions</code>, I can see it didn't quite work-- my CSVs were using camelCase, and I set up my model to look for snake_case.</p>\n<p>I did <code>rake db:rollback STEP=1</code> to drop my table.</p>\n<p>Instead of redoing my migration file to camelCase, I used <code>sed</code> to globally rename the headers for each of the CSV files I'm using as source material:</p>\n<p>In the CSV directory:\n<code>sed -i -- 's/headerName/header_name/g' *</code></p>\n<p>It worked, except it created a bunch of weird filenames with a bunch of dashes, so I probably shouldn't have used this <em>exact</em> <code>sed</code> command.</p>\n<p>So I ran <code>rake db:migrate</code> again, then the same <code>Dir.glob</code> command stuff in the rails console.</p>\n<p>Running <code>rails server</code> again, I can see the CSV data I imported!</p>\n<h2>Querying Data</h2>\n<p>Now that I've got my data in a database, I need to learn how to query it. I'm reading through the <a href=\"http://guides.rubyonrails.org/active_record_querying.html\">Query Guides</a>.</p>\n<p>After some experimentation in the rails console, I found that I could select entries with a query like this:</p>\n<pre><code class=\"language-ruby\">std_overs = Prediction.where(\"std_home_pred + std_away_pred > ou\")\n</code></pre>\n<p>Now the <code>std_overs</code> is an <code>ActiveRecord::Relation</code>.</p>\n<p>This means I can do this in the console to play around:</p>\n<pre><code class=\"language-ruby\">std_over_wins = std_overs.where(\"ou_result = 'O'\")\nstd_over_losses = std_overs.where(\"ou_result = 'U'\")\n\nstd_over_diff_10_wins = std_over_wins.where(\"(std_home_pred + std_away_pred - ou) >= 10\")\n</code></pre>\n<h2>Creating other Tables</h2>","id":"6506426e-e345-539c-a3fd-17e8ffaf691f","frontmatter":{"date":"2017-12-28T02:18:29.004Z","path":"/learning-some-activerecord","title":"Learning Some ActiveRecord","excerpt":null,"tags":["rails","ruby","activerecord"]}},{"html":"<h1>Build and deploy a quick Rails app to Heroku</h1>\n<p>Building and deploying a Rails app to Heroku is actually pretty fast.</p>\n<p>Start by running:</p>\n<pre><code class=\"language-ruby\">rails new basic_app\n</code></pre>\n<p>After starting the server with <code>rails server -b 0.0.0.0 -p 3000</code>, you should see the default Rails \"Welcome\" screen.</p>\n<p>Now generate a controller:</p>\n<pre><code class=\"language-ruby\">rails generate controller home\n</code></pre>\n<p>And inside of <code>config/routes.rb</code>:</p>\n<pre><code class=\"language-ruby\">Rails.application.routes.draw do\n  root 'home#index'\nend\n</code></pre>\n<p>Create a new file <code>app/views/home/index.html.erb</code>, and add a headline:</p>\n<pre><code class=\"language-ruby\">&#x3C;h1>Here's a headline.&#x3C;/h1>\n</code></pre>\n<p>We can set some styles in <code>app/assets/stylesheets/home.scss</code></p>\n<pre><code class=\"language-css\">h1 {\n  color: rebeccapurple;\n}\n</code></pre>\n<p>Restart the Rails server, and you should see the headline.</p>\n<p>Push it to github!</p>\n<h1>Deploying to Heroku</h1>\n<p>Create a new Heroku app:</p>\n<pre><code class=\"language-ruby\">heroku create tayiorbeii-basic-app\n</code></pre>\n<p>Then do:</p>\n<pre><code class=\"language-ruby\">git push heroku master\n</code></pre>\n<p><em>I actually got an error here.</em></p>\n<p>Heroku complained about the <code>sqlite3</code> gem not being supported by Heroku, so I'm going to remove it from the <code>Gemfile</code> and try to push again.</p>\n<p>So I removed it, pushed again, but it complained that I have to run <code>bundle install</code> to clean up the lockfile.</p>\n<p>Probably should have just used <code>rails new basic_app --database=postgresql</code> when creating the app.</p>\n<p>Update the Gemfile to use <code>pg</code>:</p>\n<pre><code class=\"language-ruby\"># Use postgresql as the database for Active Record\ngem 'pg'\n</code></pre>\n<p>Run <code>bundle install</code> then push to git &#x26; Heroku, and still complaining.</p>\n<p>Ends up there's more references to <code>sqlite3</code> in the <code>config/database.yml</code> file.</p>\n<p>Push it up, and all is well with the universe!</p>","id":"4dc86a71-df12-5c81-bf2d-4b1753a4c64c","frontmatter":{"date":"2017-12-06T23:12:06.113Z","path":"/basic-rails-app","title":"Build and deploy a quick Rails app to Heroku","excerpt":"","tags":["ruby","rails","heroku","code"]}}],"tagName":"rails"},"updatedAt":1530053076091,"pluginCreator___NODE":"Plugin default-site-plugin","pluginCreatorId":"Plugin default-site-plugin","componentPath":"/Users/taylor/Documents/Projects/taylorlistens/src/templates/tag-page.js","posts":[{"html":"<h1>Learning some ActiveRecord</h1>\n<p>My goal here is to create a database seeded by some csv files, so I can ask questions of my data.</p>\n<p><strong>NOTE:</strong> This is a play-by-play of what I'm doing as I do it, and is NOT in step-by-step, \"follow along at home\" format. I make mistakes here, and then work on fixing them!</p>\n<h3>Scaffolding an app</h3>\n<p>A scaffold is a full set of model, database migratioin, controller, view, and test suite.</p>\n<pre><code class=\"language-ruby\">rails new basketball_model --database=postgresql\n\nrails generate scaffold Prediction home:string away:string ...\n\nrake db:create\n</code></pre>\n<hr>\n<h3>Associating Tables</h3>\n<p>Following through <a href=\"http://guides.rubyonrails.org/association_basics.html\">Rails Guides' Associations info</a>, My goal is to build something like this structure:</p>\n<ul>\n<li>\n<p><code>Team</code></p>\n<ul>\n<li><code>team_id</code></li>\n<li><code>team_name</code></li>\n<li><code>team_abbv</code></li>\n<li><code>team_city</code></li>\n<li><code>has_many</code> of each odds through each <code>Match</code></li>\n<li><code>has_many</code> <code>Match</code>es</li>\n</ul>\n</li>\n<li>\n<p><code>Match</code></p>\n<ul>\n<li><code>has_many</code> <code>Team</code>s</li>\n<li><code>has_one</code> <code>MoneyLineOdd</code> etc.</li>\n<li><code>has_many</code> <code>Prediction</code>s</li>\n<li><code>match_id</code></li>\n<li><code>date</code> datetime</li>\n<li><code>home_team_id</code></li>\n<li><code>away_team_id</code></li>\n<li><code>home_score</code></li>\n<li><code>away_score</code></li>\n<li><code>home_fave</code> boolean</li>\n<li><code>away_fave</code> boolean</li>\n<li><code>home_dog</code> boolean</li>\n<li><code>away_dog</code> boolean</li>\n</ul>\n</li>\n<li>\n<p><code>MoneyLineOdd</code></p>\n<ul>\n<li><code>belongs_to</code> <code>Match</code></li>\n<li><code>moneyline_id</code></li>\n<li><code>home_closing_odd</code></li>\n<li><code>away_closing_odd</code></li>\n<li><code>home_opening_odd</code></li>\n<li><code>away_opening_odd</code></li>\n</ul>\n</li>\n<li>\n<p><code>SpreadOdd</code></p>\n<ul>\n<li><code>belongs_to</code> <code>Match</code></li>\n<li><code>spread_id</code></li>\n<li><code>home_closing_odd</code></li>\n<li><code>away_closing_odd</code></li>\n<li><code>home_opening_odd</code></li>\n<li><code>away_opening_odd</code></li>\n<li><code>home_closing_value</code></li>\n<li><code>away_closing_value</code></li>\n<li><code>home_opening_value</code></li>\n<li><code>away_opening_value</code></li>\n</ul>\n</li>\n<li>\n<p><code>TotalOdd</code></p>\n<ul>\n<li><code>belongs_to</code> <code>Match</code></li>\n<li><code>total_id</code></li>\n<li><code>over_closing_odd</code></li>\n<li><code>under_closing_odd</code></li>\n<li><code>over_opening_odd</code></li>\n<li><code>under_opening_odd</code></li>\n<li><code>over_closing_value</code></li>\n<li><code>under_closing_value</code></li>\n<li><code>over_opening_value</code></li>\n<li><code>under_opening_value</code></li>\n</ul>\n</li>\n<li>\n<p><code>Prediction</code></p>\n<ul>\n<li><code>belongs_to</code> <code>Match</code></li>\n<li><code>prediction_id</code></li>\n<li><code>pred_type</code></li>\n<li><code>home_pred</code></li>\n<li><code>away_pred</code></li>\n<li><code>over_pred</code></li>\n<li><code>under_pred</code></li>\n</ul>\n</li>\n</ul>\n<p>With all of that schema stuff written out (which actually took quite a while to reason about...) I am going to try to generate scaffolding using info from <a href=\"https://stackoverflow.com/questions/39810917/generate-scaffold-which-references-a-model-who-refers-another-model\">this StackOverflow question</a></p>\n<pre><code>rails g scaffold team id:integer name:string abbv:string city:string --no-stylesheets\n\nrails g scaffold match date:datetime home_team_id:references{polymorphic} away_team_id:references{polymorphic} home_fave:boolean away_fave:boolean home_dog:boolean away_dog:boolean --no-stylesheets\n\nrails g scaffold SpreadOdd home_opening_odd:float home_closing_odd:float away_opening_odd:float away_closing_odd:float home_opening_value:float away_opening_value:float home_closing_value:float away_closing_value:float --no-stylesheets\n\nrails g scaffold TotalOdd over_opening_odd:float over_closing_odd:float under_opening_odd:float under_closing_odd:float over_opening_value:float under_opening_value:float over_closing_value:float under_closing_value:float --no-stylesheets\n\nrails g scaffold Prediction pred_type:string home_pred:float away_pred:float over_pred:float under_pred:float --no-stylesheets\n</code></pre>\n<p>I forgot to add <code>home_id</code> and <code>away_id</code> to the Match table, so I had to rollback the database migration:</p>\n<pre><code class=\"language-ruby\">rake db:rollback STEP=1\n</code></pre>\n<p>Then I generated a new migration:</p>\n<pre><code class=\"language-ruby\">rails generate migration add_homeId_to_match\n</code></pre>\n<p>Updated the migration to add the foreign keys:</p>\n<pre><code class=\"language-ruby\">class AddHomeIdToMatch &#x3C; ActiveRecord::Migration[5.0]\n  def change\n    create_table :matches do |t|\n      t.integer :home_id, foreign_key: true\n      t.integer :away_id, foreign_key: true\n    end\n  end\nend\n</code></pre>\n<p>and ran <code>rake db:migrate</code></p>\n<p><em>Big up to Rose and Nick for helping me figure out this part.</em></p>\n<p>Now to run a similar process for <code>Team</code> to add <code>matches</code> and <code>odds</code>, except doing it on one line like I could have the first time:</p>\n<pre><code class=\"language-ruby\">rails generate migration addMatchesToTeams home_matches:references away_matches:references\n</code></pre>\n<pre><code class=\"language-ruby\">class AddMatchesToTeams &#x3C; ActiveRecord::Migration[5.0]\n  def change\n    add_reference :teams, :home_matches, foreign_key: true\n    add_reference :teams, :away_matches, foreign_key: true\n  end\nend\n</code></pre>\n<p>Then I create a new <code>MatchTeams</code> table in order to link the <code>Team</code>s and <code>Match</code>es together.</p>\n<hr>\n<p>Now I'm going to try following the instructions for the <a href=\"https://github.com/michaelnera/active_record_importer\">ActiveRecordImporter gem</a>. </p>\n<p>I added <code>acts_as_importable</code> to <code>models/prediction.rb</code>.</p>\n<p>Then I found the syntax to find every CSV file in the directory I was working with (remembering that each file's header columns are part of the model I scaffolded):</p>\n<pre><code class=\"language-ruby\">Dir.glob('path/to/files/*.rb') do |csv_file|\n  Prediction.import!(file: File.open(csv_file))\nend\n</code></pre>\n<p>Judging from the amount of text that flew by, I think it worked!</p>\n<p>Visiting <code>http://localhost:3000/predictions</code>, I can see it didn't quite work-- my CSVs were using camelCase, and I set up my model to look for snake_case.</p>\n<p>I did <code>rake db:rollback STEP=1</code> to drop my table.</p>\n<p>Instead of redoing my migration file to camelCase, I used <code>sed</code> to globally rename the headers for each of the CSV files I'm using as source material:</p>\n<p>In the CSV directory:\n<code>sed -i -- 's/headerName/header_name/g' *</code></p>\n<p>It worked, except it created a bunch of weird filenames with a bunch of dashes, so I probably shouldn't have used this <em>exact</em> <code>sed</code> command.</p>\n<p>So I ran <code>rake db:migrate</code> again, then the same <code>Dir.glob</code> command stuff in the rails console.</p>\n<p>Running <code>rails server</code> again, I can see the CSV data I imported!</p>\n<h2>Querying Data</h2>\n<p>Now that I've got my data in a database, I need to learn how to query it. I'm reading through the <a href=\"http://guides.rubyonrails.org/active_record_querying.html\">Query Guides</a>.</p>\n<p>After some experimentation in the rails console, I found that I could select entries with a query like this:</p>\n<pre><code class=\"language-ruby\">std_overs = Prediction.where(\"std_home_pred + std_away_pred > ou\")\n</code></pre>\n<p>Now the <code>std_overs</code> is an <code>ActiveRecord::Relation</code>.</p>\n<p>This means I can do this in the console to play around:</p>\n<pre><code class=\"language-ruby\">std_over_wins = std_overs.where(\"ou_result = 'O'\")\nstd_over_losses = std_overs.where(\"ou_result = 'U'\")\n\nstd_over_diff_10_wins = std_over_wins.where(\"(std_home_pred + std_away_pred - ou) >= 10\")\n</code></pre>\n<h2>Creating other Tables</h2>","id":"6506426e-e345-539c-a3fd-17e8ffaf691f","frontmatter":{"date":"2017-12-28T02:18:29.004Z","path":"/learning-some-activerecord","title":"Learning Some ActiveRecord","excerpt":null,"tags":["rails","ruby","activerecord"]}},{"html":"<h1>Build and deploy a quick Rails app to Heroku</h1>\n<p>Building and deploying a Rails app to Heroku is actually pretty fast.</p>\n<p>Start by running:</p>\n<pre><code class=\"language-ruby\">rails new basic_app\n</code></pre>\n<p>After starting the server with <code>rails server -b 0.0.0.0 -p 3000</code>, you should see the default Rails \"Welcome\" screen.</p>\n<p>Now generate a controller:</p>\n<pre><code class=\"language-ruby\">rails generate controller home\n</code></pre>\n<p>And inside of <code>config/routes.rb</code>:</p>\n<pre><code class=\"language-ruby\">Rails.application.routes.draw do\n  root 'home#index'\nend\n</code></pre>\n<p>Create a new file <code>app/views/home/index.html.erb</code>, and add a headline:</p>\n<pre><code class=\"language-ruby\">&#x3C;h1>Here's a headline.&#x3C;/h1>\n</code></pre>\n<p>We can set some styles in <code>app/assets/stylesheets/home.scss</code></p>\n<pre><code class=\"language-css\">h1 {\n  color: rebeccapurple;\n}\n</code></pre>\n<p>Restart the Rails server, and you should see the headline.</p>\n<p>Push it to github!</p>\n<h1>Deploying to Heroku</h1>\n<p>Create a new Heroku app:</p>\n<pre><code class=\"language-ruby\">heroku create tayiorbeii-basic-app\n</code></pre>\n<p>Then do:</p>\n<pre><code class=\"language-ruby\">git push heroku master\n</code></pre>\n<p><em>I actually got an error here.</em></p>\n<p>Heroku complained about the <code>sqlite3</code> gem not being supported by Heroku, so I'm going to remove it from the <code>Gemfile</code> and try to push again.</p>\n<p>So I removed it, pushed again, but it complained that I have to run <code>bundle install</code> to clean up the lockfile.</p>\n<p>Probably should have just used <code>rails new basic_app --database=postgresql</code> when creating the app.</p>\n<p>Update the Gemfile to use <code>pg</code>:</p>\n<pre><code class=\"language-ruby\"># Use postgresql as the database for Active Record\ngem 'pg'\n</code></pre>\n<p>Run <code>bundle install</code> then push to git &#x26; Heroku, and still complaining.</p>\n<p>Ends up there's more references to <code>sqlite3</code> in the <code>config/database.yml</code> file.</p>\n<p>Push it up, and all is well with the universe!</p>","id":"4dc86a71-df12-5c81-bf2d-4b1753a4c64c","frontmatter":{"date":"2017-12-06T23:12:06.113Z","path":"/basic-rails-app","title":"Build and deploy a quick Rails app to Heroku","excerpt":"","tags":["ruby","rails","heroku","code"]}}],"tagName":"rails"}}