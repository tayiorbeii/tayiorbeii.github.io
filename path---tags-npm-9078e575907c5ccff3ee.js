webpackJsonp([0xe8f6ee9528bf],{376:function(o,e){o.exports={pathContext:{posts:[{html:'<p>I made a fork of <a href="https://github.com/tayiorbeii/tachyons-as-props"><code>tachyons-as-props</code></a> in my quest to replace tachyons + sass with glamorous.</p>\n<p>A nice way to work on a <code>node_module</code> locally without having to publish it is to use <code>yarn link</code> (or <code>npm link</code> if you\'re so inclined).</p>\n<p>The steps are pretty easy:</p>\n<ol>\n<li>\n<p>Go to the local folder of the module you are currently working on:</p>\n<ul>\n<li><code>cd module_in_progress</code></li>\n</ul>\n</li>\n<li>\n<p>Type <code>yarn link</code></p>\n<ul>\n<li>You should see a "success" message</li>\n</ul>\n</li>\n<li>\n<p>Go to your consuming project\'s folder</p>\n<ul>\n<li><code>cd my_project</code></li>\n</ul>\n</li>\n<li>Type <code>yarn link module_in_progress</code></li>\n</ol>\n<p>Now if you <code>ls node_modules</code> in your consuming project\'s folder, you should see that <code>module_in_progress</code> has been symlinked to its folder (as opposed to being installed as normal).</p>',id:"/Users/taylor/Documents/Projects/taylorlistens/src/pages/2017-09-13-yarn-link/index.md absPath of file >>> MarkdownRemark",frontmatter:{date:"2017-09-13T18:33:28.522Z",path:"/yarn-link",title:"`yarn link` for npm Module Development",excerpt:"",tags:["javascript","npm"]}}],tagName:"npm"}}}});
//# sourceMappingURL=path---tags-npm-9078e575907c5ccff3ee.js.map