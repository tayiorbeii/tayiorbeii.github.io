webpackJsonp([45154319480143],{379:function(e,t){e.exports={pathContext:{posts:[{html:"<p>I'd been playing with various code bins and online IDEs for a while, but I was having trouble finding best practices.</p>\n<blockquote>\n<p>How do I set up a JavaScript project locally?</p>\n</blockquote>\n<blockquote>\n<p>What's the best way to organize my Node.js code?</p>\n</blockquote>\n<p>Programming has a lot of personal preferences that come along with it (for example, a laptop is not a phone, so trackpad scrolling should only be in a downward motion). After lots of iterations, this is my workflow when I go to write in Node.js.</p>\n<h2>Create a New Directory</h2>\n<p>I keep everything in <code>~/Documents/Projects</code>, and create a new directory. Sometimes I browse my Projects folder and don't remember what things are from the name. I suppose this isn't exactly unique in the code world, though...</p>\n<h2>Run <code>npm init</code></h2>\n<p>Inside of my new directory, the first thing I do when starting a new command line node project is to run\n<code>npm init</code>.</p>\n<p>This command starts a utility that creates a <code>package.json</code> file for the project. When you run it, you'll be prompted for the answers to several different questions. Hitting enter will accept the default, which is fine. The only thing I change is setting the entry point to <code>src/index.js</code>. If you hit enter too fast, you can always manually edit the <code>package.json</code> file later.</p>\n<h2>Create the <code>src</code> Directory</h2>\n<p>Next I create the <code>src</code> folder with <code>mkdir src</code>. I like to put my source code in this directory to avoid having the <code>node_modules</code> directory indexed when I'm using my editor later. I also run <code>touch src/index.js</code> to create a placeholder for the file. If I'm writing a program that has output, I'll also create an <code>output</code> directory in the root of the project.</p>\n<h2>Starting Version Control</h2>\n<p>Even if I'm not planning on uploading my code to GitHub, I typically will start tracking by running <code>git init</code> in the root of my project. This will create an empty repository so you can start tracking changes. If you decide to add a GitHub repo later, you can edit the git config to get it set up.</p>\n<p>When creating a new repository on GitHub, I initialize it without a README or <code>.gitignore</code> file in favor of doing them myself manually later.</p>\n<p>To add a GitHub repo to the project later, run</p>\n<pre><code>git remote add origin git@github.com:username/repo-name.git\n</code></pre>\n<h2>Adding a <code>.gitignore</code> File</h2>\n<p>I typically add a <code>.gitignore</code> file that contains the following:</p>\n<pre><code>node_modules/\n.env\n</code></pre>\n<h2>Start Writing Code</h2>\n<p>From here, I open up <code>src/index.js</code> and start hacking!</p>",id:"/Users/taylor/Documents/Projects/taylorlistens/src/pages/2018-06-27-starting-a-nodejs-project/index.md absPath of file >>> MarkdownRemark",frontmatter:{date:"2018-06-27T17:30:59.377Z",path:"/starting-a-nodejs-project",title:"Starting A Node.js Project",excerpt:null,tags:["javascript","nodejs"]}}],tagName:"nodejs"}}}});
//# sourceMappingURL=path---tags-nodejs-821b147dbf23a72197c1.js.map